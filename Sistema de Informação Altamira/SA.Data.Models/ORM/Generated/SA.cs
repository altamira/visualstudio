
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `SA`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=sqlserver;Initial Catalog=SA;Integrated Security=True`
//     Schema:                 `dbo`
//     Include Views:          `True`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using SA.ORM.PetaPoco;

namespace SA.ORM.PetaPoco.SA
{
	public partial class Context : Database
	{
		public Context() 
			: base("SA")
		{
			CommonConstruct();
		}

		public Context(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			Context GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static Context GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new Context();
        }

		[ThreadStatic] static Context _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static Context repo { get { return Context.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("Produto2")]
	[ExplicitColumns]
    public partial class Produto2 : Context.Record<Produto2>  
    {
        [Column] 
		public string Codigo 
		{ 
			get
			{
				return _Codigo;
			}
			set
			{
				_Codigo = value;
				MarkColumnModified("Codigo");
			}
		}
		string _Codigo;

        [Column] 
		public string Descricao 
		{ 
			get
			{
				return _Descricao;
			}
			set
			{
				_Descricao = value;
				MarkColumnModified("Descricao");
			}
		}
		string _Descricao;

        [Column] 
		public string Unidade 
		{ 
			get
			{
				return _Unidade;
			}
			set
			{
				_Unidade = value;
				MarkColumnModified("Unidade");
			}
		}
		string _Unidade;

        [Column] 
		public decimal? Estoque 
		{ 
			get
			{
				return _Estoque;
			}
			set
			{
				_Estoque = value;
				MarkColumnModified("Estoque");
			}
		}
		decimal? _Estoque;

        [Column] 
		public decimal? Preco 
		{ 
			get
			{
				return _Preco;
			}
			set
			{
				_Preco = value;
				MarkColumnModified("Preco");
			}
		}
		decimal? _Preco;

	}
    
	[TableName("PedidoItem2")]
	[ExplicitColumns]
    public partial class PedidoItem2 : Context.Record<PedidoItem2>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public int Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int _Pedido;

        [Column] 
		public short Item 
		{ 
			get
			{
				return _Item;
			}
			set
			{
				_Item = value;
				MarkColumnModified("Item");
			}
		}
		short _Item;

        [Column] 
		public string Produto 
		{ 
			get
			{
				return _Produto;
			}
			set
			{
				_Produto = value;
				MarkColumnModified("Produto");
			}
		}
		string _Produto;

        [Column] 
		public decimal? Descricao 
		{ 
			get
			{
				return _Descricao;
			}
			set
			{
				_Descricao = value;
				MarkColumnModified("Descricao");
			}
		}
		decimal? _Descricao;

        [Column] 
		public decimal? IPI 
		{ 
			get
			{
				return _IPI;
			}
			set
			{
				_IPI = value;
				MarkColumnModified("IPI");
			}
		}
		decimal? _IPI;

        [Column] 
		public decimal? Quantidade 
		{ 
			get
			{
				return _Quantidade;
			}
			set
			{
				_Quantidade = value;
				MarkColumnModified("Quantidade");
			}
		}
		decimal? _Quantidade;

        [Column] 
		public decimal? Preço 
		{ 
			get
			{
				return _Preço;
			}
			set
			{
				_Preço = value;
				MarkColumnModified("Preço");
			}
		}
		decimal? _Preço;

	}
    
	[TableName("DBAFinanceiro")]
	[PrimaryKey("RowNumber")]
	[ExplicitColumns]
    public partial class DBAFinanceiro : Context.Record<DBAFinanceiro>  
    {
        [Column] 
		public int RowNumber 
		{ 
			get
			{
				return _RowNumber;
			}
			set
			{
				_RowNumber = value;
				MarkColumnModified("RowNumber");
			}
		}
		int _RowNumber;

        [Column] 
		public int? EventClass 
		{ 
			get
			{
				return _EventClass;
			}
			set
			{
				_EventClass = value;
				MarkColumnModified("EventClass");
			}
		}
		int? _EventClass;

        [Column] 
		public string TextData 
		{ 
			get
			{
				return _TextData;
			}
			set
			{
				_TextData = value;
				MarkColumnModified("TextData");
			}
		}
		string _TextData;

        [Column] 
		public string ApplicationName 
		{ 
			get
			{
				return _ApplicationName;
			}
			set
			{
				_ApplicationName = value;
				MarkColumnModified("ApplicationName");
			}
		}
		string _ApplicationName;

        [Column] 
		public string NTUserName 
		{ 
			get
			{
				return _NTUserName;
			}
			set
			{
				_NTUserName = value;
				MarkColumnModified("NTUserName");
			}
		}
		string _NTUserName;

        [Column] 
		public string LoginName 
		{ 
			get
			{
				return _LoginName;
			}
			set
			{
				_LoginName = value;
				MarkColumnModified("LoginName");
			}
		}
		string _LoginName;

        [Column] 
		public int? CPU 
		{ 
			get
			{
				return _CPU;
			}
			set
			{
				_CPU = value;
				MarkColumnModified("CPU");
			}
		}
		int? _CPU;

        [Column] 
		public long? Reads 
		{ 
			get
			{
				return _Reads;
			}
			set
			{
				_Reads = value;
				MarkColumnModified("Reads");
			}
		}
		long? _Reads;

        [Column] 
		public long? Writes 
		{ 
			get
			{
				return _Writes;
			}
			set
			{
				_Writes = value;
				MarkColumnModified("Writes");
			}
		}
		long? _Writes;

        [Column] 
		public long? Duration 
		{ 
			get
			{
				return _Duration;
			}
			set
			{
				_Duration = value;
				MarkColumnModified("Duration");
			}
		}
		long? _Duration;

        [Column] 
		public int? ClientProcessID 
		{ 
			get
			{
				return _ClientProcessID;
			}
			set
			{
				_ClientProcessID = value;
				MarkColumnModified("ClientProcessID");
			}
		}
		int? _ClientProcessID;

        [Column] 
		public int? SPID 
		{ 
			get
			{
				return _SPID;
			}
			set
			{
				_SPID = value;
				MarkColumnModified("SPID");
			}
		}
		int? _SPID;

        [Column] 
		public DateTime? StartTime 
		{ 
			get
			{
				return _StartTime;
			}
			set
			{
				_StartTime = value;
				MarkColumnModified("StartTime");
			}
		}
		DateTime? _StartTime;

        [Column] 
		public DateTime? EndTime 
		{ 
			get
			{
				return _EndTime;
			}
			set
			{
				_EndTime = value;
				MarkColumnModified("EndTime");
			}
		}
		DateTime? _EndTime;

        [Column] 
		public byte[] BinaryData 
		{ 
			get
			{
				return _BinaryData;
			}
			set
			{
				_BinaryData = value;
				MarkColumnModified("BinaryData");
			}
		}
		byte[] _BinaryData;

        [Column] 
		public string DatabaseName 
		{ 
			get
			{
				return _DatabaseName;
			}
			set
			{
				_DatabaseName = value;
				MarkColumnModified("DatabaseName");
			}
		}
		string _DatabaseName;

        [Column] 
		public string HostName 
		{ 
			get
			{
				return _HostName;
			}
			set
			{
				_HostName = value;
				MarkColumnModified("HostName");
			}
		}
		string _HostName;

	}
    
	[TableName("Empresa")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class Empresa : Context.Record<Empresa>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Nome 
		{ 
			get
			{
				return _Nome;
			}
			set
			{
				_Nome = value;
				MarkColumnModified("Nome");
			}
		}
		string _Nome;

        [Column] 
		public string RazaoSocial 
		{ 
			get
			{
				return _RazaoSocial;
			}
			set
			{
				_RazaoSocial = value;
				MarkColumnModified("RazaoSocial");
			}
		}
		string _RazaoSocial;

	}
    
	[TableName("DBAFinanceiro2")]
	[PrimaryKey("RowNumber")]
	[ExplicitColumns]
    public partial class DBAFinanceiro2 : Context.Record<DBAFinanceiro2>  
    {
        [Column] 
		public int RowNumber 
		{ 
			get
			{
				return _RowNumber;
			}
			set
			{
				_RowNumber = value;
				MarkColumnModified("RowNumber");
			}
		}
		int _RowNumber;

        [Column] 
		public int? EventClass 
		{ 
			get
			{
				return _EventClass;
			}
			set
			{
				_EventClass = value;
				MarkColumnModified("EventClass");
			}
		}
		int? _EventClass;

        [Column] 
		public string TextData 
		{ 
			get
			{
				return _TextData;
			}
			set
			{
				_TextData = value;
				MarkColumnModified("TextData");
			}
		}
		string _TextData;

        [Column] 
		public string ApplicationName 
		{ 
			get
			{
				return _ApplicationName;
			}
			set
			{
				_ApplicationName = value;
				MarkColumnModified("ApplicationName");
			}
		}
		string _ApplicationName;

        [Column] 
		public string NTUserName 
		{ 
			get
			{
				return _NTUserName;
			}
			set
			{
				_NTUserName = value;
				MarkColumnModified("NTUserName");
			}
		}
		string _NTUserName;

        [Column] 
		public string LoginName 
		{ 
			get
			{
				return _LoginName;
			}
			set
			{
				_LoginName = value;
				MarkColumnModified("LoginName");
			}
		}
		string _LoginName;

        [Column] 
		public int? CPU 
		{ 
			get
			{
				return _CPU;
			}
			set
			{
				_CPU = value;
				MarkColumnModified("CPU");
			}
		}
		int? _CPU;

        [Column] 
		public long? Reads 
		{ 
			get
			{
				return _Reads;
			}
			set
			{
				_Reads = value;
				MarkColumnModified("Reads");
			}
		}
		long? _Reads;

        [Column] 
		public long? Writes 
		{ 
			get
			{
				return _Writes;
			}
			set
			{
				_Writes = value;
				MarkColumnModified("Writes");
			}
		}
		long? _Writes;

        [Column] 
		public long? Duration 
		{ 
			get
			{
				return _Duration;
			}
			set
			{
				_Duration = value;
				MarkColumnModified("Duration");
			}
		}
		long? _Duration;

        [Column] 
		public int? ClientProcessID 
		{ 
			get
			{
				return _ClientProcessID;
			}
			set
			{
				_ClientProcessID = value;
				MarkColumnModified("ClientProcessID");
			}
		}
		int? _ClientProcessID;

        [Column] 
		public int? SPID 
		{ 
			get
			{
				return _SPID;
			}
			set
			{
				_SPID = value;
				MarkColumnModified("SPID");
			}
		}
		int? _SPID;

        [Column] 
		public DateTime? StartTime 
		{ 
			get
			{
				return _StartTime;
			}
			set
			{
				_StartTime = value;
				MarkColumnModified("StartTime");
			}
		}
		DateTime? _StartTime;

        [Column] 
		public DateTime? EndTime 
		{ 
			get
			{
				return _EndTime;
			}
			set
			{
				_EndTime = value;
				MarkColumnModified("EndTime");
			}
		}
		DateTime? _EndTime;

        [Column] 
		public byte[] BinaryData 
		{ 
			get
			{
				return _BinaryData;
			}
			set
			{
				_BinaryData = value;
				MarkColumnModified("BinaryData");
			}
		}
		byte[] _BinaryData;

        [Column] 
		public string DatabaseName 
		{ 
			get
			{
				return _DatabaseName;
			}
			set
			{
				_DatabaseName = value;
				MarkColumnModified("DatabaseName");
			}
		}
		string _DatabaseName;

        [Column] 
		public string HostName 
		{ 
			get
			{
				return _HostName;
			}
			set
			{
				_HostName = value;
				MarkColumnModified("HostName");
			}
		}
		string _HostName;

	}
    
	[TableName("sysdiagrams")]
	[PrimaryKey("diagram_id")]
	[ExplicitColumns]
    public partial class sysdiagram : Context.Record<sysdiagram>  
    {
        [Column] 
		public string name 
		{ 
			get
			{
				return _name;
			}
			set
			{
				_name = value;
				MarkColumnModified("name");
			}
		}
		string _name;

        [Column] 
		public int principal_id 
		{ 
			get
			{
				return _principal_id;
			}
			set
			{
				_principal_id = value;
				MarkColumnModified("principal_id");
			}
		}
		int _principal_id;

        [Column] 
		public int diagram_id 
		{ 
			get
			{
				return _diagram_id;
			}
			set
			{
				_diagram_id = value;
				MarkColumnModified("diagram_id");
			}
		}
		int _diagram_id;

        [Column] 
		public int? version 
		{ 
			get
			{
				return _version;
			}
			set
			{
				_version = value;
				MarkColumnModified("version");
			}
		}
		int? _version;

        [Column] 
		public byte[] definition 
		{ 
			get
			{
				return _definition;
			}
			set
			{
				_definition = value;
				MarkColumnModified("definition");
			}
		}
		byte[] _definition;

	}
    
	[TableName("DBAFinanceiro3")]
	[PrimaryKey("RowNumber")]
	[ExplicitColumns]
    public partial class DBAFinanceiro3 : Context.Record<DBAFinanceiro3>  
    {
        [Column] 
		public int RowNumber 
		{ 
			get
			{
				return _RowNumber;
			}
			set
			{
				_RowNumber = value;
				MarkColumnModified("RowNumber");
			}
		}
		int _RowNumber;

        [Column] 
		public int? EventClass 
		{ 
			get
			{
				return _EventClass;
			}
			set
			{
				_EventClass = value;
				MarkColumnModified("EventClass");
			}
		}
		int? _EventClass;

        [Column] 
		public string TextData 
		{ 
			get
			{
				return _TextData;
			}
			set
			{
				_TextData = value;
				MarkColumnModified("TextData");
			}
		}
		string _TextData;

        [Column] 
		public string ApplicationName 
		{ 
			get
			{
				return _ApplicationName;
			}
			set
			{
				_ApplicationName = value;
				MarkColumnModified("ApplicationName");
			}
		}
		string _ApplicationName;

        [Column] 
		public string NTUserName 
		{ 
			get
			{
				return _NTUserName;
			}
			set
			{
				_NTUserName = value;
				MarkColumnModified("NTUserName");
			}
		}
		string _NTUserName;

        [Column] 
		public string LoginName 
		{ 
			get
			{
				return _LoginName;
			}
			set
			{
				_LoginName = value;
				MarkColumnModified("LoginName");
			}
		}
		string _LoginName;

        [Column] 
		public int? CPU 
		{ 
			get
			{
				return _CPU;
			}
			set
			{
				_CPU = value;
				MarkColumnModified("CPU");
			}
		}
		int? _CPU;

        [Column] 
		public long? Reads 
		{ 
			get
			{
				return _Reads;
			}
			set
			{
				_Reads = value;
				MarkColumnModified("Reads");
			}
		}
		long? _Reads;

        [Column] 
		public long? Writes 
		{ 
			get
			{
				return _Writes;
			}
			set
			{
				_Writes = value;
				MarkColumnModified("Writes");
			}
		}
		long? _Writes;

        [Column] 
		public long? Duration 
		{ 
			get
			{
				return _Duration;
			}
			set
			{
				_Duration = value;
				MarkColumnModified("Duration");
			}
		}
		long? _Duration;

        [Column] 
		public int? ClientProcessID 
		{ 
			get
			{
				return _ClientProcessID;
			}
			set
			{
				_ClientProcessID = value;
				MarkColumnModified("ClientProcessID");
			}
		}
		int? _ClientProcessID;

        [Column] 
		public int? SPID 
		{ 
			get
			{
				return _SPID;
			}
			set
			{
				_SPID = value;
				MarkColumnModified("SPID");
			}
		}
		int? _SPID;

        [Column] 
		public DateTime? StartTime 
		{ 
			get
			{
				return _StartTime;
			}
			set
			{
				_StartTime = value;
				MarkColumnModified("StartTime");
			}
		}
		DateTime? _StartTime;

        [Column] 
		public DateTime? EndTime 
		{ 
			get
			{
				return _EndTime;
			}
			set
			{
				_EndTime = value;
				MarkColumnModified("EndTime");
			}
		}
		DateTime? _EndTime;

        [Column] 
		public byte[] BinaryData 
		{ 
			get
			{
				return _BinaryData;
			}
			set
			{
				_BinaryData = value;
				MarkColumnModified("BinaryData");
			}
		}
		byte[] _BinaryData;

        [Column] 
		public string DatabaseName 
		{ 
			get
			{
				return _DatabaseName;
			}
			set
			{
				_DatabaseName = value;
				MarkColumnModified("DatabaseName");
			}
		}
		string _DatabaseName;

        [Column] 
		public string HostName 
		{ 
			get
			{
				return _HostName;
			}
			set
			{
				_HostName = value;
				MarkColumnModified("HostName");
			}
		}
		string _HostName;

	}
    
	[TableName("Banco")]
	[PrimaryKey("Codigo", autoIncrement=false)]
	[ExplicitColumns]
    public partial class Banco : Context.Record<Banco>  
    {
        [Column] 
		public int Codigo 
		{ 
			get
			{
				return _Codigo;
			}
			set
			{
				_Codigo = value;
				MarkColumnModified("Codigo");
			}
		}
		int _Codigo;

        [Column] 
		public string Nome 
		{ 
			get
			{
				return _Nome;
			}
			set
			{
				_Nome = value;
				MarkColumnModified("Nome");
			}
		}
		string _Nome;

	}
    
	[TableName("CondicaoPagamento")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class CondicaoPagamento : Context.Record<CondicaoPagamento>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Codigo 
		{ 
			get
			{
				return _Codigo;
			}
			set
			{
				_Codigo = value;
				MarkColumnModified("Codigo");
			}
		}
		string _Codigo;

	}
    
	[TableName("ContaCorrente")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class ContaCorrente : Context.Record<ContaCorrente>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public int Banco 
		{ 
			get
			{
				return _Banco;
			}
			set
			{
				_Banco = value;
				MarkColumnModified("Banco");
			}
		}
		int _Banco;

        [Column] 
		public string Agencia 
		{ 
			get
			{
				return _Agencia;
			}
			set
			{
				_Agencia = value;
				MarkColumnModified("Agencia");
			}
		}
		string _Agencia;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

	}
    
	[TableName("PedidoVendaItem")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class PedidoVendaItem : Context.Record<PedidoVendaItem>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public int Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int _Pedido;

        [Column] 
		public int Produto 
		{ 
			get
			{
				return _Produto;
			}
			set
			{
				_Produto = value;
				MarkColumnModified("Produto");
			}
		}
		int _Produto;

	}
    
	[TableName("PedidoVenda")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class PedidoVenda : Context.Record<PedidoVenda>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public int Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		int _Numero;

        [Column] 
		public int Cliente 
		{ 
			get
			{
				return _Cliente;
			}
			set
			{
				_Cliente = value;
				MarkColumnModified("Cliente");
			}
		}
		int _Cliente;

        [Column] 
		public DateTime Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime _Emissao;

        [Column] 
		public DateTime Entrega 
		{ 
			get
			{
				return _Entrega;
			}
			set
			{
				_Entrega = value;
				MarkColumnModified("Entrega");
			}
		}
		DateTime _Entrega;

        [Column] 
		public int CondicaoPagamento 
		{ 
			get
			{
				return _CondicaoPagamento;
			}
			set
			{
				_CondicaoPagamento = value;
				MarkColumnModified("CondicaoPagamento");
			}
		}
		int _CondicaoPagamento;

	}
    
	[TableName("View_PedidoVenda")]
	[ExplicitColumns]
    public partial class View_PedidoVenda : Context.Record<View_PedidoVenda>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public int Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		int _Numero;

        [Column] 
		public int Cliente 
		{ 
			get
			{
				return _Cliente;
			}
			set
			{
				_Cliente = value;
				MarkColumnModified("Cliente");
			}
		}
		int _Cliente;

        [Column] 
		public DateTime Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime _Emissao;

        [Column] 
		public DateTime Entrega 
		{ 
			get
			{
				return _Entrega;
			}
			set
			{
				_Entrega = value;
				MarkColumnModified("Entrega");
			}
		}
		DateTime _Entrega;

        [Column] 
		public int CondicaoPagamento 
		{ 
			get
			{
				return _CondicaoPagamento;
			}
			set
			{
				_CondicaoPagamento = value;
				MarkColumnModified("CondicaoPagamento");
			}
		}
		int _CondicaoPagamento;

	}
    
	[TableName("Fluxo de Caixa Titulos Pagos no Periodo")]
	[ExplicitColumns]
    public partial class Fluxo_de_Caixa_Titulos_Pagos_no_Periodo : Context.Record<Fluxo_de_Caixa_Titulos_Pagos_no_Periodo>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public string Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		string _Titulo;

        [Column] 
		public string Documento 
		{ 
			get
			{
				return _Documento;
			}
			set
			{
				_Documento = value;
				MarkColumnModified("Documento");
			}
		}
		string _Documento;

        [Column] 
		public string Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		string _Pedido;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column] 
		public DateTime? Pagamento 
		{ 
			get
			{
				return _Pagamento;
			}
			set
			{
				_Pagamento = value;
				MarkColumnModified("Pagamento");
			}
		}
		DateTime? _Pagamento;

        [Column] 
		public string Mes 
		{ 
			get
			{
				return _Mes;
			}
			set
			{
				_Mes = value;
				MarkColumnModified("Mes");
			}
		}
		string _Mes;

        [Column] 
		public int? Ano 
		{ 
			get
			{
				return _Ano;
			}
			set
			{
				_Ano = value;
				MarkColumnModified("Ano");
			}
		}
		int? _Ano;

        [Column("Valor do Titulo")] 
		public decimal? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		decimal? _Valor_do_Titulo;

        [Column("Total Baixado")] 
		public decimal? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		decimal? _Total_Baixado;

        [Column("Valor do Saldo")] 
		public decimal? Valor_do_Saldo 
		{ 
			get
			{
				return _Valor_do_Saldo;
			}
			set
			{
				_Valor_do_Saldo = value;
				MarkColumnModified("Valor do Saldo");
			}
		}
		decimal? _Valor_do_Saldo;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Fluxo de Caixa Titulos Vencidos no Periodo")]
	[ExplicitColumns]
    public partial class Fluxo_de_Caixa_Titulos_Vencidos_no_Periodo : Context.Record<Fluxo_de_Caixa_Titulos_Vencidos_no_Periodo>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public string Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		string _Titulo;

        [Column] 
		public string Documento 
		{ 
			get
			{
				return _Documento;
			}
			set
			{
				_Documento = value;
				MarkColumnModified("Documento");
			}
		}
		string _Documento;

        [Column] 
		public string Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		string _Pedido;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column] 
		public string Mes 
		{ 
			get
			{
				return _Mes;
			}
			set
			{
				_Mes = value;
				MarkColumnModified("Mes");
			}
		}
		string _Mes;

        [Column] 
		public int? Ano 
		{ 
			get
			{
				return _Ano;
			}
			set
			{
				_Ano = value;
				MarkColumnModified("Ano");
			}
		}
		int? _Ano;

        [Column("Valor do Titulo")] 
		public decimal? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		decimal? _Valor_do_Titulo;

        [Column("Total Baixado")] 
		public decimal? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		decimal? _Total_Baixado;

        [Column("Valor do Saldo")] 
		public decimal? Valor_do_Saldo 
		{ 
			get
			{
				return _Valor_do_Saldo;
			}
			set
			{
				_Valor_do_Saldo = value;
				MarkColumnModified("Valor do Saldo");
			}
		}
		decimal? _Valor_do_Saldo;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Realizado")]
	[ExplicitColumns]
    public partial class Realizado : Context.Record<Realizado>  
    {
        [Column] 
		public double? Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		double? _Empresa;

        [Column] 
		public double? Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		double? _Titulo;

        [Column] 
		public double? Documento 
		{ 
			get
			{
				return _Documento;
			}
			set
			{
				_Documento = value;
				MarkColumnModified("Documento");
			}
		}
		double? _Documento;

        [Column] 
		public double? Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		double? _Pedido;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column] 
		public DateTime? Pagamento 
		{ 
			get
			{
				return _Pagamento;
			}
			set
			{
				_Pagamento = value;
				MarkColumnModified("Pagamento");
			}
		}
		DateTime? _Pagamento;

        [Column] 
		public string Mes 
		{ 
			get
			{
				return _Mes;
			}
			set
			{
				_Mes = value;
				MarkColumnModified("Mes");
			}
		}
		string _Mes;

        [Column] 
		public double? Ano 
		{ 
			get
			{
				return _Ano;
			}
			set
			{
				_Ano = value;
				MarkColumnModified("Ano");
			}
		}
		double? _Ano;

        [Column("Valor do Titulo")] 
		public double? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		double? _Valor_do_Titulo;

        [Column("Total Baixado")] 
		public double? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		double? _Total_Baixado;

        [Column("Valor do Saldo")] 
		public double? Valor_do_Saldo 
		{ 
			get
			{
				return _Valor_do_Saldo;
			}
			set
			{
				_Valor_do_Saldo = value;
				MarkColumnModified("Valor do Saldo");
			}
		}
		double? _Valor_do_Saldo;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Pago")]
	[ExplicitColumns]
    public partial class Pago : Context.Record<Pago>  
    {
        [Column] 
		public double? Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		double? _Titulo;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencto 
		{ 
			get
			{
				return _Vencto;
			}
			set
			{
				_Vencto = value;
				MarkColumnModified("Vencto");
			}
		}
		DateTime? _Vencto;

        [Column] 
		public DateTime? Pagto 
		{ 
			get
			{
				return _Pagto;
			}
			set
			{
				_Pagto = value;
				MarkColumnModified("Pagto");
			}
		}
		DateTime? _Pagto;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column("Valor do Titulo")] 
		public double? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		double? _Valor_do_Titulo;

        [Column("Total do Titulo")] 
		public double? Total_do_Titulo 
		{ 
			get
			{
				return _Total_do_Titulo;
			}
			set
			{
				_Total_do_Titulo = value;
				MarkColumnModified("Total do Titulo");
			}
		}
		double? _Total_do_Titulo;

        [Column("Total Baixado")] 
		public double? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		double? _Total_Baixado;

        [Column("Saldo Restante")] 
		public double? Saldo_Restante 
		{ 
			get
			{
				return _Saldo_Restante;
			}
			set
			{
				_Saldo_Restante = value;
				MarkColumnModified("Saldo Restante");
			}
		}
		double? _Saldo_Restante;

	}
    
	[TableName("Mailing List View")]
	[ExplicitColumns]
    public partial class Mailing_List_View : Context.Record<Mailing_List_View>  
    {
        [Column] 
		public string email 
		{ 
			get
			{
				return _email;
			}
			set
			{
				_email = value;
				MarkColumnModified("email");
			}
		}
		string _email;

        [Column] 
		public string name 
		{ 
			get
			{
				return _name;
			}
			set
			{
				_name = value;
				MarkColumnModified("name");
			}
		}
		string _name;

        [Column] 
		public string alias 
		{ 
			get
			{
				return _alias;
			}
			set
			{
				_alias = value;
				MarkColumnModified("alias");
			}
		}
		string _alias;

        [Column] 
		public string company 
		{ 
			get
			{
				return _company;
			}
			set
			{
				_company = value;
				MarkColumnModified("company");
			}
		}
		string _company;

	}
    
	[TableName("MAILING_LIST")]
	[ExplicitColumns]
    public partial class MAILING_LIST : Context.Record<MAILING_LIST>  
    {
        [Column] 
		public string email 
		{ 
			get
			{
				return _email;
			}
			set
			{
				_email = value;
				MarkColumnModified("email");
			}
		}
		string _email;

        [Column] 
		public string name 
		{ 
			get
			{
				return _name;
			}
			set
			{
				_name = value;
				MarkColumnModified("name");
			}
		}
		string _name;

        [Column] 
		public string alias 
		{ 
			get
			{
				return _alias;
			}
			set
			{
				_alias = value;
				MarkColumnModified("alias");
			}
		}
		string _alias;

        [Column] 
		public string company 
		{ 
			get
			{
				return _company;
			}
			set
			{
				_company = value;
				MarkColumnModified("company");
			}
		}
		string _company;

	}
    
	[TableName("Produto")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class Produto : Context.Record<Produto>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Codigo 
		{ 
			get
			{
				return _Codigo;
			}
			set
			{
				_Codigo = value;
				MarkColumnModified("Codigo");
			}
		}
		string _Codigo;

        [Column] 
		public string Descricao 
		{ 
			get
			{
				return _Descricao;
			}
			set
			{
				_Descricao = value;
				MarkColumnModified("Descricao");
			}
		}
		string _Descricao;

        [Column] 
		public string Estoque 
		{ 
			get
			{
				return _Estoque;
			}
			set
			{
				_Estoque = value;
				MarkColumnModified("Estoque");
			}
		}
		string _Estoque;

	}
    
	[TableName("NFe Chave Acesso 1.1")]
	[ExplicitColumns]
    public partial class NFe_Chave_Acesso_1_1 : Context.Record<NFe_Chave_Acesso_1_1>  
    {
        [Column] 
		public int? cd_empresa 
		{ 
			get
			{
				return _cd_empresa;
			}
			set
			{
				_cd_empresa = value;
				MarkColumnModified("cd_empresa");
			}
		}
		int? _cd_empresa;

        [Column] 
		public DateTime? dt_nota_saida 
		{ 
			get
			{
				return _dt_nota_saida;
			}
			set
			{
				_dt_nota_saida = value;
				MarkColumnModified("dt_nota_saida");
			}
		}
		DateTime? _dt_nota_saida;

        [Column] 
		public int cd_nota_saida 
		{ 
			get
			{
				return _cd_nota_saida;
			}
			set
			{
				_cd_nota_saida = value;
				MarkColumnModified("cd_nota_saida");
			}
		}
		int _cd_nota_saida;

        [Column] 
		public int? cUF 
		{ 
			get
			{
				return _cUF;
			}
			set
			{
				_cUF = value;
				MarkColumnModified("cUF");
			}
		}
		int? _cUF;

        [Column] 
		public string AAMM 
		{ 
			get
			{
				return _AAMM;
			}
			set
			{
				_AAMM = value;
				MarkColumnModified("AAMM");
			}
		}
		string _AAMM;

        [Column] 
		public string CNPJ 
		{ 
			get
			{
				return _CNPJ;
			}
			set
			{
				_CNPJ = value;
				MarkColumnModified("CNPJ");
			}
		}
		string _CNPJ;

        [Column] 
		public string mod 
		{ 
			get
			{
				return _mod;
			}
			set
			{
				_mod = value;
				MarkColumnModified("mod");
			}
		}
		string _mod;

        [Column] 
		public string serie 
		{ 
			get
			{
				return _serie;
			}
			set
			{
				_serie = value;
				MarkColumnModified("serie");
			}
		}
		string _serie;

        [Column] 
		public string nNF 
		{ 
			get
			{
				return _nNF;
			}
			set
			{
				_nNF = value;
				MarkColumnModified("nNF");
			}
		}
		string _nNF;

        [Column] 
		public string cNF 
		{ 
			get
			{
				return _cNF;
			}
			set
			{
				_cNF = value;
				MarkColumnModified("cNF");
			}
		}
		string _cNF;

        [Column] 
		public string cDV 
		{ 
			get
			{
				return _cDV;
			}
			set
			{
				_cDV = value;
				MarkColumnModified("cDV");
			}
		}
		string _cDV;

        [Column] 
		public string ChaveAcesso 
		{ 
			get
			{
				return _ChaveAcesso;
			}
			set
			{
				_ChaveAcesso = value;
				MarkColumnModified("ChaveAcesso");
			}
		}
		string _ChaveAcesso;

	}
    
	[TableName("NFe Chave Acesso 2.0")]
	[ExplicitColumns]
    public partial class NFe_Chave_Acesso_2_0 : Context.Record<NFe_Chave_Acesso_2_0>  
    {
        [Column] 
		public int? cd_empresa 
		{ 
			get
			{
				return _cd_empresa;
			}
			set
			{
				_cd_empresa = value;
				MarkColumnModified("cd_empresa");
			}
		}
		int? _cd_empresa;

        [Column] 
		public DateTime? dt_nota_saida 
		{ 
			get
			{
				return _dt_nota_saida;
			}
			set
			{
				_dt_nota_saida = value;
				MarkColumnModified("dt_nota_saida");
			}
		}
		DateTime? _dt_nota_saida;

        [Column] 
		public int cd_nota_saida 
		{ 
			get
			{
				return _cd_nota_saida;
			}
			set
			{
				_cd_nota_saida = value;
				MarkColumnModified("cd_nota_saida");
			}
		}
		int _cd_nota_saida;

        [Column] 
		public int? cUF 
		{ 
			get
			{
				return _cUF;
			}
			set
			{
				_cUF = value;
				MarkColumnModified("cUF");
			}
		}
		int? _cUF;

        [Column] 
		public string AAMM 
		{ 
			get
			{
				return _AAMM;
			}
			set
			{
				_AAMM = value;
				MarkColumnModified("AAMM");
			}
		}
		string _AAMM;

        [Column] 
		public string CNPJ 
		{ 
			get
			{
				return _CNPJ;
			}
			set
			{
				_CNPJ = value;
				MarkColumnModified("CNPJ");
			}
		}
		string _CNPJ;

        [Column] 
		public string mod 
		{ 
			get
			{
				return _mod;
			}
			set
			{
				_mod = value;
				MarkColumnModified("mod");
			}
		}
		string _mod;

        [Column] 
		public string serie 
		{ 
			get
			{
				return _serie;
			}
			set
			{
				_serie = value;
				MarkColumnModified("serie");
			}
		}
		string _serie;

        [Column] 
		public string nNF 
		{ 
			get
			{
				return _nNF;
			}
			set
			{
				_nNF = value;
				MarkColumnModified("nNF");
			}
		}
		string _nNF;

        [Column] 
		public string cNF 
		{ 
			get
			{
				return _cNF;
			}
			set
			{
				_cNF = value;
				MarkColumnModified("cNF");
			}
		}
		string _cNF;

        [Column] 
		public string cDV 
		{ 
			get
			{
				return _cDV;
			}
			set
			{
				_cDV = value;
				MarkColumnModified("cDV");
			}
		}
		string _cDV;

        [Column] 
		public string ChaveAcesso 
		{ 
			get
			{
				return _ChaveAcesso;
			}
			set
			{
				_ChaveAcesso = value;
				MarkColumnModified("ChaveAcesso");
			}
		}
		string _ChaveAcesso;

	}
    
	[TableName("Download_SEFAZ")]
	[ExplicitColumns]
    public partial class Download_SEFAZ : Context.Record<Download_SEFAZ>  
    {
        [Column] 
		public double? Sequencia 
		{ 
			get
			{
				return _Sequencia;
			}
			set
			{
				_Sequencia = value;
				MarkColumnModified("Sequencia");
			}
		}
		double? _Sequencia;

        [Column] 
		public string OK 
		{ 
			get
			{
				return _OK;
			}
			set
			{
				_OK = value;
				MarkColumnModified("OK");
			}
		}
		string _OK;

        [Column] 
		public double? Serie 
		{ 
			get
			{
				return _Serie;
			}
			set
			{
				_Serie = value;
				MarkColumnModified("Serie");
			}
		}
		double? _Serie;

        [Column] 
		public string Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		string _Numero;

        [Column("Data Emissão")] 
		public DateTime? Data_Emissão 
		{ 
			get
			{
				return _Data_Emissão;
			}
			set
			{
				_Data_Emissão = value;
				MarkColumnModified("Data Emissão");
			}
		}
		DateTime? _Data_Emissão;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column("CNPJ/CPF")] 
		public string CNPJ_CPF 
		{ 
			get
			{
				return _CNPJ_CPF;
			}
			set
			{
				_CNPJ_CPF = value;
				MarkColumnModified("CNPJ/CPF");
			}
		}
		string _CNPJ_CPF;

        [Column] 
		public string Operação 
		{ 
			get
			{
				return _Operação;
			}
			set
			{
				_Operação = value;
				MarkColumnModified("Operação");
			}
		}
		string _Operação;

        [Column] 
		public string Situação 
		{ 
			get
			{
				return _Situação;
			}
			set
			{
				_Situação = value;
				MarkColumnModified("Situação");
			}
		}
		string _Situação;

        [Column("Data Upload")] 
		public DateTime? Data_Upload 
		{ 
			get
			{
				return _Data_Upload;
			}
			set
			{
				_Data_Upload = value;
				MarkColumnModified("Data Upload");
			}
		}
		DateTime? _Data_Upload;

        [Column("Versao Nfe")] 
		public string Versao_Nfe 
		{ 
			get
			{
				return _Versao_Nfe;
			}
			set
			{
				_Versao_Nfe = value;
				MarkColumnModified("Versao Nfe");
			}
		}
		string _Versao_Nfe;

        [Column] 
		public string ChaveAcesso 
		{ 
			get
			{
				return _ChaveAcesso;
			}
			set
			{
				_ChaveAcesso = value;
				MarkColumnModified("ChaveAcesso");
			}
		}
		string _ChaveAcesso;

	}
    
	[TableName("Fluxo de Caixa Titulos Vencidos em Aberto")]
	[ExplicitColumns]
    public partial class Fluxo_de_Caixa_Titulos_Vencidos_em_Aberto : Context.Record<Fluxo_de_Caixa_Titulos_Vencidos_em_Aberto>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public int Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		int _Titulo;

        [Column] 
		public decimal? Documento 
		{ 
			get
			{
				return _Documento;
			}
			set
			{
				_Documento = value;
				MarkColumnModified("Documento");
			}
		}
		decimal? _Documento;

        [Column] 
		public int? Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int? _Pedido;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column] 
		public string Mes 
		{ 
			get
			{
				return _Mes;
			}
			set
			{
				_Mes = value;
				MarkColumnModified("Mes");
			}
		}
		string _Mes;

        [Column] 
		public int? Ano 
		{ 
			get
			{
				return _Ano;
			}
			set
			{
				_Ano = value;
				MarkColumnModified("Ano");
			}
		}
		int? _Ano;

        [Column("Valor do Titulo")] 
		public decimal? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		decimal? _Valor_do_Titulo;

        [Column("Total Baixado")] 
		public decimal? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		decimal? _Total_Baixado;

        [Column("Valor do Saldo")] 
		public decimal? Valor_do_Saldo 
		{ 
			get
			{
				return _Valor_do_Saldo;
			}
			set
			{
				_Valor_do_Saldo = value;
				MarkColumnModified("Valor do Saldo");
			}
		}
		decimal? _Valor_do_Saldo;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Classificação de Titulos do Fluxo de Caixa")]
	[PrimaryKey("Id")]
	[ExplicitColumns]
    public partial class Classificação_de_Titulos_do_Fluxo_de_Caixa : Context.Record<Classificação_de_Titulos_do_Fluxo_de_Caixa>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Classificacao 
		{ 
			get
			{
				return _Classificacao;
			}
			set
			{
				_Classificacao = value;
				MarkColumnModified("Classificacao");
			}
		}
		string _Classificacao;

	}
    
	[TableName("Resumo de Contas a Pagar")]
	[ExplicitColumns]
    public partial class Resumo_de_Contas_a_Pagar : Context.Record<Resumo_de_Contas_a_Pagar>  
    {
        [Column] 
		public long? Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long? _Id;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column("Total do Dia")] 
		public decimal? Total_do_Dia 
		{ 
			get
			{
				return _Total_do_Dia;
			}
			set
			{
				_Total_do_Dia = value;
				MarkColumnModified("Total do Dia");
			}
		}
		decimal? _Total_do_Dia;

	}
    
	[TableName("FATURAS")]
	[ExplicitColumns]
    public partial class FATURA : Context.Record<FATURA>  
    {
        [Column] 
		public int? Fatura 
		{ 
			get
			{
				return _Fatura;
			}
			set
			{
				_Fatura = value;
				MarkColumnModified("Fatura");
			}
		}
		int? _Fatura;

        [Column(" Tipo ")] 
		public string _Tipo_ 
		{ 
			get
			{
				return __Tipo_;
			}
			set
			{
				__Tipo_ = value;
				MarkColumnModified(" Tipo ");
			}
		}
		string __Tipo_;

        [Column(" CFOP ")] 
		public string _CFOP_ 
		{ 
			get
			{
				return __CFOP_;
			}
			set
			{
				__CFOP_ = value;
				MarkColumnModified(" CFOP ");
			}
		}
		string __CFOP_;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public int? Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int? _Pedido;

        [Column(" Cliente ")] 
		public string _Cliente_ 
		{ 
			get
			{
				return __Cliente_;
			}
			set
			{
				__Cliente_ = value;
				MarkColumnModified(" Cliente ");
			}
		}
		string __Cliente_;

        [Column("Valor Fatura")] 
		public double Valor_Fatura 
		{ 
			get
			{
				return _Valor_Fatura;
			}
			set
			{
				_Valor_Fatura = value;
				MarkColumnModified("Valor Fatura");
			}
		}
		double _Valor_Fatura;

	}
    
	[TableName("Fatura")]
	[ExplicitColumns]
    public partial class Fatura : Context.Record<Fatura>  
    {
        [Column("Fatura")] 
		public int? _Fatura 
		{ 
			get
			{
				return __Fatura;
			}
			set
			{
				__Fatura = value;
				MarkColumnModified("Fatura");
			}
		}
		int? __Fatura;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public string CFOP 
		{ 
			get
			{
				return _CFOP;
			}
			set
			{
				_CFOP = value;
				MarkColumnModified("CFOP");
			}
		}
		string _CFOP;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public int? Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int? _Pedido;

        [Column] 
		public string Cliente 
		{ 
			get
			{
				return _Cliente;
			}
			set
			{
				_Cliente = value;
				MarkColumnModified("Cliente");
			}
		}
		string _Cliente;

        [Column] 
		public decimal? Valor 
		{ 
			get
			{
				return _Valor;
			}
			set
			{
				_Valor = value;
				MarkColumnModified("Valor");
			}
		}
		decimal? _Valor;

	}
    
	[TableName("Orcamento")]
	[ExplicitColumns]
    public partial class Orcamento : Context.Record<Orcamento>  
    {
        [Column] 
		public string Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		string _Numero;

        [Column] 
		public string Revisao 
		{ 
			get
			{
				return _Revisao;
			}
			set
			{
				_Revisao = value;
				MarkColumnModified("Revisao");
			}
		}
		string _Revisao;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

	}
    
	[TableName("Prazo de Entrega dos Pedidos Emitidos de 10 a 27 de Fevereiro de 2013")]
	[ExplicitColumns]
    public partial class Prazo_de_Entrega_dos_Pedidos_Emitidos_de_10_a_27_de_Fevereiro_de_2013 : Context.Record<Prazo_de_Entrega_dos_Pedidos_Emitidos_de_10_a_27_de_Fevereiro_de_2013>  
    {
        [Column] 
		public int? Fatura 
		{ 
			get
			{
				return _Fatura;
			}
			set
			{
				_Fatura = value;
				MarkColumnModified("Fatura");
			}
		}
		int? _Fatura;

        [Column] 
		public string CFOP 
		{ 
			get
			{
				return _CFOP;
			}
			set
			{
				_CFOP = value;
				MarkColumnModified("CFOP");
			}
		}
		string _CFOP;

        [Column] 
		public int? Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		int? _Pedido;

        [Column] 
		public string Cliente 
		{ 
			get
			{
				return _Cliente;
			}
			set
			{
				_Cliente = value;
				MarkColumnModified("Cliente");
			}
		}
		string _Cliente;

        [Column("Data Emissão")] 
		public string Data_Emissão 
		{ 
			get
			{
				return _Data_Emissão;
			}
			set
			{
				_Data_Emissão = value;
				MarkColumnModified("Data Emissão");
			}
		}
		string _Data_Emissão;

        [Column("Data Entrega")] 
		public string Data_Entrega 
		{ 
			get
			{
				return _Data_Entrega;
			}
			set
			{
				_Data_Entrega = value;
				MarkColumnModified("Data Entrega");
			}
		}
		string _Data_Entrega;

        [Column("Prazo Entrega em Dias")] 
		public int? Prazo_Entrega_em_Dias 
		{ 
			get
			{
				return _Prazo_Entrega_em_Dias;
			}
			set
			{
				_Prazo_Entrega_em_Dias = value;
				MarkColumnModified("Prazo Entrega em Dias");
			}
		}
		int? _Prazo_Entrega_em_Dias;

        [Column("Data Situação")] 
		public string Data_Situação 
		{ 
			get
			{
				return _Data_Situação;
			}
			set
			{
				_Data_Situação = value;
				MarkColumnModified("Data Situação");
			}
		}
		string _Data_Situação;

        [Column("Descrição da Situação Atual")] 
		public string Descrição_da_Situação_Atual 
		{ 
			get
			{
				return _Descrição_da_Situação_Atual;
			}
			set
			{
				_Descrição_da_Situação_Atual = value;
				MarkColumnModified("Descrição da Situação Atual");
			}
		}
		string _Descrição_da_Situação_Atual;

	}
    
	[TableName("Cliente2")]
	[ExplicitColumns]
    public partial class Cliente2 : Context.Record<Cliente2>  
    {
        [Column] 
		public string CNPJ 
		{ 
			get
			{
				return _CNPJ;
			}
			set
			{
				_CNPJ = value;
				MarkColumnModified("CNPJ");
			}
		}
		string _CNPJ;

        [Column] 
		public string Nome 
		{ 
			get
			{
				return _Nome;
			}
			set
			{
				_Nome = value;
				MarkColumnModified("Nome");
			}
		}
		string _Nome;

        [Column] 
		public string RazaoSocial 
		{ 
			get
			{
				return _RazaoSocial;
			}
			set
			{
				_RazaoSocial = value;
				MarkColumnModified("RazaoSocial");
			}
		}
		string _RazaoSocial;

	}
    
	[TableName("Pedido2")]
	[ExplicitColumns]
    public partial class Pedido2 : Context.Record<Pedido2>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public int Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		int _Numero;

        [Column] 
		public string Orcamento 
		{ 
			get
			{
				return _Orcamento;
			}
			set
			{
				_Orcamento = value;
				MarkColumnModified("Orcamento");
			}
		}
		string _Orcamento;

        [Column] 
		public string Cliente 
		{ 
			get
			{
				return _Cliente;
			}
			set
			{
				_Cliente = value;
				MarkColumnModified("Cliente");
			}
		}
		string _Cliente;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Entrega 
		{ 
			get
			{
				return _Entrega;
			}
			set
			{
				_Entrega = value;
				MarkColumnModified("Entrega");
			}
		}
		DateTime? _Entrega;

        [Column] 
		public decimal? ValorProdutos 
		{ 
			get
			{
				return _ValorProdutos;
			}
			set
			{
				_ValorProdutos = value;
				MarkColumnModified("ValorProdutos");
			}
		}
		decimal? _ValorProdutos;

	}
}


