
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `SA`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=sqlserver;Initial Catalog=SA;Integrated Security=True`
//     Schema:                 `GPIMAC`
//     Include Views:          `True`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using SA.ORM.PetaPoco;

namespace SA.ORM.PetaPoco.GPIMAC
{
	public partial class Context : Database
	{
		public Context() 
			: base("SA")
		{
			CommonConstruct();
		}

		public Context(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			Context GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static Context GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new Context();
        }

		[ThreadStatic] static Context _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static Context repo { get { return Context.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("Lançamentos do Fluxo de Caixa")]
	[ExplicitColumns]
    public partial class Lançamentos_do_Fluxo_de_Caixa : Context.Record<Lançamentos_do_Fluxo_de_Caixa>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public string Titulo 
		{ 
			get
			{
				return _Titulo;
			}
			set
			{
				_Titulo = value;
				MarkColumnModified("Titulo");
			}
		}
		string _Titulo;

        [Column] 
		public string Documento 
		{ 
			get
			{
				return _Documento;
			}
			set
			{
				_Documento = value;
				MarkColumnModified("Documento");
			}
		}
		string _Documento;

        [Column] 
		public string Pedido 
		{ 
			get
			{
				return _Pedido;
			}
			set
			{
				_Pedido = value;
				MarkColumnModified("Pedido");
			}
		}
		string _Pedido;

        [Column] 
		public string Titular 
		{ 
			get
			{
				return _Titular;
			}
			set
			{
				_Titular = value;
				MarkColumnModified("Titular");
			}
		}
		string _Titular;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public DateTime? Emissao 
		{ 
			get
			{
				return _Emissao;
			}
			set
			{
				_Emissao = value;
				MarkColumnModified("Emissao");
			}
		}
		DateTime? _Emissao;

        [Column] 
		public DateTime? Vencimento 
		{ 
			get
			{
				return _Vencimento;
			}
			set
			{
				_Vencimento = value;
				MarkColumnModified("Vencimento");
			}
		}
		DateTime? _Vencimento;

        [Column] 
		public DateTime? Pagamento 
		{ 
			get
			{
				return _Pagamento;
			}
			set
			{
				_Pagamento = value;
				MarkColumnModified("Pagamento");
			}
		}
		DateTime? _Pagamento;

        [Column("Valor do Titulo")] 
		public decimal? Valor_do_Titulo 
		{ 
			get
			{
				return _Valor_do_Titulo;
			}
			set
			{
				_Valor_do_Titulo = value;
				MarkColumnModified("Valor do Titulo");
			}
		}
		decimal? _Valor_do_Titulo;

        [Column("Total Baixado")] 
		public decimal? Total_Baixado 
		{ 
			get
			{
				return _Total_Baixado;
			}
			set
			{
				_Total_Baixado = value;
				MarkColumnModified("Total Baixado");
			}
		}
		decimal? _Total_Baixado;

        [Column("Valor do Saldo")] 
		public decimal? Valor_do_Saldo 
		{ 
			get
			{
				return _Valor_do_Saldo;
			}
			set
			{
				_Valor_do_Saldo = value;
				MarkColumnModified("Valor do Saldo");
			}
		}
		decimal? _Valor_do_Saldo;

        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Produtos")]
	[ExplicitColumns]
    public partial class Produto : Context.Record<Produto>  
    {
        [Column] 
		public string Codigo 
		{ 
			get
			{
				return _Codigo;
			}
			set
			{
				_Codigo = value;
				MarkColumnModified("Codigo");
			}
		}
		string _Codigo;

        [Column] 
		public string Descrição 
		{ 
			get
			{
				return _Descrição;
			}
			set
			{
				_Descrição = value;
				MarkColumnModified("Descrição");
			}
		}
		string _Descrição;

        [Column] 
		public string Unidade 
		{ 
			get
			{
				return _Unidade;
			}
			set
			{
				_Unidade = value;
				MarkColumnModified("Unidade");
			}
		}
		string _Unidade;

        [Column] 
		public decimal? Quantidade 
		{ 
			get
			{
				return _Quantidade;
			}
			set
			{
				_Quantidade = value;
				MarkColumnModified("Quantidade");
			}
		}
		decimal? _Quantidade;

        [Column] 
		public decimal? Preço 
		{ 
			get
			{
				return _Preço;
			}
			set
			{
				_Preço = value;
				MarkColumnModified("Preço");
			}
		}
		decimal? _Preço;

        [Column] 
		public decimal? Peso 
		{ 
			get
			{
				return _Peso;
			}
			set
			{
				_Peso = value;
				MarkColumnModified("Peso");
			}
		}
		decimal? _Peso;

	}
    
	[TableName("Plano de Contas")]
	[ExplicitColumns]
    public partial class Plano_de_Conta : Context.Record<Plano_de_Conta>  
    {
        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Tipo 
		{ 
			get
			{
				return _Tipo;
			}
			set
			{
				_Tipo = value;
				MarkColumnModified("Tipo");
			}
		}
		string _Tipo;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column] 
		public string Descrição 
		{ 
			get
			{
				return _Descrição;
			}
			set
			{
				_Descrição = value;
				MarkColumnModified("Descrição");
			}
		}
		string _Descrição;

	}
    
	[TableName("NFe Chaves Acesso para Download SEFAZ ")]
	[ExplicitColumns]
    public partial class NFe_Chaves_Acesso_para_Download_SEFAZ_ : Context.Record<NFe_Chaves_Acesso_para_Download_SEFAZ_>  
    {
        [Column] 
		public double? Numero 
		{ 
			get
			{
				return _Numero;
			}
			set
			{
				_Numero = value;
				MarkColumnModified("Numero");
			}
		}
		double? _Numero;

        [Column] 
		public string ChaveAcesso 
		{ 
			get
			{
				return _ChaveAcesso;
			}
			set
			{
				_ChaveAcesso = value;
				MarkColumnModified("ChaveAcesso");
			}
		}
		string _ChaveAcesso;

	}
    
	[TableName("Plano de Contas Hierarquico")]
	[ExplicitColumns]
    public partial class Plano_de_Contas_Hierarquico : Context.Record<Plano_de_Contas_Hierarquico>  
    {
        [Column] 
		public string Conta 
		{ 
			get
			{
				return _Conta;
			}
			set
			{
				_Conta = value;
				MarkColumnModified("Conta");
			}
		}
		string _Conta;

        [Column] 
		public string Grupo 
		{ 
			get
			{
				return _Grupo;
			}
			set
			{
				_Grupo = value;
				MarkColumnModified("Grupo");
			}
		}
		string _Grupo;

        [Column] 
		public string SubGrupo 
		{ 
			get
			{
				return _SubGrupo;
			}
			set
			{
				_SubGrupo = value;
				MarkColumnModified("SubGrupo");
			}
		}
		string _SubGrupo;

        [Column("Plano de Contas")] 
		public string Plano_de_Contas 
		{ 
			get
			{
				return _Plano_de_Contas;
			}
			set
			{
				_Plano_de_Contas = value;
				MarkColumnModified("Plano de Contas");
			}
		}
		string _Plano_de_Contas;

	}
    
	[TableName("Pedido de Venda")]
	[ExplicitColumns]
    public partial class Pedido_de_Venda : Context.Record<Pedido_de_Venda>  
    {
        [Column] 
		public string Empresa 
		{ 
			get
			{
				return _Empresa;
			}
			set
			{
				_Empresa = value;
				MarkColumnModified("Empresa");
			}
		}
		string _Empresa;

        [Column] 
		public int? Número 
		{ 
			get
			{
				return _Número;
			}
			set
			{
				_Número = value;
				MarkColumnModified("Número");
			}
		}
		int? _Número;

        [Column("Número do Orçamento")] 
		public int? Número_do_Orçamento 
		{ 
			get
			{
				return _Número_do_Orçamento;
			}
			set
			{
				_Número_do_Orçamento = value;
				MarkColumnModified("Número do Orçamento");
			}
		}
		int? _Número_do_Orçamento;

        [Column("Data da Emissão")] 
		public DateTime? Data_da_Emissão 
		{ 
			get
			{
				return _Data_da_Emissão;
			}
			set
			{
				_Data_da_Emissão = value;
				MarkColumnModified("Data da Emissão");
			}
		}
		DateTime? _Data_da_Emissão;

        [Column("Data da Entrega")] 
		public DateTime? Data_da_Entrega 
		{ 
			get
			{
				return _Data_da_Entrega;
			}
			set
			{
				_Data_da_Entrega = value;
				MarkColumnModified("Data da Entrega");
			}
		}
		DateTime? _Data_da_Entrega;

        [Column("CNPJ do Cliente")] 
		public string CNPJ_do_Cliente 
		{ 
			get
			{
				return _CNPJ_do_Cliente;
			}
			set
			{
				_CNPJ_do_Cliente = value;
				MarkColumnModified("CNPJ do Cliente");
			}
		}
		string _CNPJ_do_Cliente;

        [Column("Código da Condição de Pagamento")] 
		public string Código_da_Condição_de_Pagamento 
		{ 
			get
			{
				return _Código_da_Condição_de_Pagamento;
			}
			set
			{
				_Código_da_Condição_de_Pagamento = value;
				MarkColumnModified("Código da Condição de Pagamento");
			}
		}
		string _Código_da_Condição_de_Pagamento;

        [Column] 
		public string Estado 
		{ 
			get
			{
				return _Estado;
			}
			set
			{
				_Estado = value;
				MarkColumnModified("Estado");
			}
		}
		string _Estado;

        [Column("Código do Representante")] 
		public string Código_do_Representante 
		{ 
			get
			{
				return _Código_do_Representante;
			}
			set
			{
				_Código_do_Representante = value;
				MarkColumnModified("Código do Representante");
			}
		}
		string _Código_do_Representante;

        [Column("Percentual de Comissão")] 
		public decimal? Percentual_de_Comissão 
		{ 
			get
			{
				return _Percentual_de_Comissão;
			}
			set
			{
				_Percentual_de_Comissão = value;
				MarkColumnModified("Percentual de Comissão");
			}
		}
		decimal? _Percentual_de_Comissão;

        [Column("Data da Situação Atual")] 
		public DateTime? Data_da_Situação_Atual 
		{ 
			get
			{
				return _Data_da_Situação_Atual;
			}
			set
			{
				_Data_da_Situação_Atual = value;
				MarkColumnModified("Data da Situação Atual");
			}
		}
		DateTime? _Data_da_Situação_Atual;

        [Column("Descrição da Situação Atual")] 
		public string Descrição_da_Situação_Atual 
		{ 
			get
			{
				return _Descrição_da_Situação_Atual;
			}
			set
			{
				_Descrição_da_Situação_Atual = value;
				MarkColumnModified("Descrição da Situação Atual");
			}
		}
		string _Descrição_da_Situação_Atual;

        [Column("Código da Situação Atual")] 
		public short? Código_da_Situação_Atual 
		{ 
			get
			{
				return _Código_da_Situação_Atual;
			}
			set
			{
				_Código_da_Situação_Atual = value;
				MarkColumnModified("Código da Situação Atual");
			}
		}
		short? _Código_da_Situação_Atual;

        [Column("Total dos Produtos")] 
		public decimal? Total_dos_Produtos 
		{ 
			get
			{
				return _Total_dos_Produtos;
			}
			set
			{
				_Total_dos_Produtos = value;
				MarkColumnModified("Total dos Produtos");
			}
		}
		decimal? _Total_dos_Produtos;

        [Column("Total do IPI")] 
		public decimal? Total_do_IPI 
		{ 
			get
			{
				return _Total_do_IPI;
			}
			set
			{
				_Total_do_IPI = value;
				MarkColumnModified("Total do IPI");
			}
		}
		decimal? _Total_do_IPI;

        [Column("Total do Pedido")] 
		public decimal? Total_do_Pedido 
		{ 
			get
			{
				return _Total_do_Pedido;
			}
			set
			{
				_Total_do_Pedido = value;
				MarkColumnModified("Total do Pedido");
			}
		}
		decimal? _Total_do_Pedido;

	}
}


