<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButton" xml:space="preserve">
    <value>Add...</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditButton" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ActionOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ActionPrepare" xml:space="preserve">
    <value>Prepare</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveButtonAs" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="SelectButton" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="UpdateButton" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>Altamira Management System</value>
  </data>
  <data name="Attendance" xml:space="preserve">
    <value>Attendance</value>
  </data>
  <data name="AttendanceHistoryDeadline" xml:space="preserve">
    <value>Deadline</value>
  </data>
  <data name="AttendanceHistoryOriginalDateTime" xml:space="preserve">
    <value>Original Date Time</value>
  </data>
  <data name="AttendanceHistoryStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AttendanceRegister" xml:space="preserve">
    <value>Attendance Register</value>
  </data>
  <data name="AttendanceRegisterCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="AttendanceRegisterComments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="AttendanceRegisterDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="AttendanceRegisterDateField" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="AttendanceRegisterDeadline" xml:space="preserve">
    <value>Deadline</value>
  </data>
  <data name="AttendanceRegisterProtocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="AttendanceRegisterPublicity" xml:space="preserve">
    <value>Publicity</value>
  </data>
  <data name="AttendanceRegisterSalesVendor" xml:space="preserve">
    <value>Sales Vendor</value>
  </data>
  <data name="AttendanceRegisterStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AttendanceRegisterStatusField" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AttendanceRegisterTop" xml:space="preserve">
    <value>Attendance Register</value>
  </data>
  <data name="AttendanceRegisterType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="AttendanceRegisterTypeField" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="AttendanceStatusTop" xml:space="preserve">
    <value>Select Attendance Status</value>
  </data>
  <data name="AttendanceTypeTop" xml:space="preserve">
    <value>Select Attendance Type</value>
  </data>
  <data name="BusyMessage" xml:space="preserve">
    <value>Loading, please wait...</value>
  </data>
  <data name="CitySelectTop" xml:space="preserve">
    <value>Select City</value>
  </data>
  <data name="ClientLocationAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ClientLocationAddressTop" xml:space="preserve">
    <value>Client Address</value>
  </data>
  <data name="ClientLocationCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ClientLocationDistrict" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="ClientLocationPostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="ClientLocationState" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="ClientRegisterTop" xml:space="preserve">
    <value>Client Register</value>
  </data>
  <data name="GridViewAlwaysVisibleNewRow" xml:space="preserve">
    <value>Click here to add new item</value>
  </data>
  <data name="GridViewClearFilter" xml:space="preserve">
    <value>Clear Filter</value>
  </data>
  <data name="GridViewFilter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="GridViewFilterAnd" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="GridViewFilterContains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="GridViewFilterEndsWith" xml:space="preserve">
    <value>Ends with</value>
  </data>
  <data name="GridViewFilterIsContainedIn" xml:space="preserve">
    <value>Is contained in</value>
  </data>
  <data name="GridViewFilterIsEqualTo" xml:space="preserve">
    <value>Is equal to</value>
  </data>
  <data name="GridViewFilterIsGreaterThan" xml:space="preserve">
    <value>Is greater than</value>
  </data>
  <data name="GridViewFilterIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Is greater than or equal to</value>
  </data>
  <data name="GridViewFilterIsLessThan" xml:space="preserve">
    <value>Is less than</value>
  </data>
  <data name="GridViewFilterIsLessThanOrEqualTo" xml:space="preserve">
    <value>Is less than or equal to</value>
  </data>
  <data name="GridViewFilterIsNotEqualTo" xml:space="preserve">
    <value>Is not equal to</value>
  </data>
  <data name="GridViewFilterMatchCase" xml:space="preserve">
    <value>Match case</value>
  </data>
  <data name="GridViewFilterOr" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="GridViewFilterSelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="GridViewFilterShowRowsWithValueThat" xml:space="preserve">
    <value>Show rows with value that</value>
  </data>
  <data name="GridViewFilterStartsWith" xml:space="preserve">
    <value>Starts with</value>
  </data>
  <data name="GridViewGroupPanelText" xml:space="preserve">
    <value>Drag a column header and drop it here to group by that column</value>
  </data>
  <data name="GridViewGroupPanelTopText" xml:space="preserve">
    <value>Group Header</value>
  </data>
  <data name="GridViewGroupPanelTopTextGrouped" xml:space="preserve">
    <value>Grouped by:</value>
  </data>
  <data name="MainPageRibbonGroupButtonOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="MainPageRibbonGroupButtonOptionsNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MainPageRibbonGroupButtonOptionsNewDesc" xml:space="preserve">
    <value>Create a new item</value>
  </data>
  <data name="MainPageRibbonGroupButtonOptionsNewTip" xml:space="preserve">
    <value>New(Ctrl+N)</value>
  </data>
  <data name="MainPageRibbonMenuExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MainPageRibbonMenuOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="MainPageRibbonMenuRecentItens" xml:space="preserve">
    <value>Recent Itens</value>
  </data>
  <data name="MainPageRibbonTabHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Publicity" xml:space="preserve">
    <value>Publicity</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>Records</value>
  </data>
  <data name="SalesClient" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="SalesVendor" xml:space="preserve">
    <value>Vendors</value>
  </data>
  <data name="SalesVendorClientAliasField" xml:space="preserve">
    <value>Alias</value>
  </data>
  <data name="SalesVendorClientNameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SelectProductTop" xml:space="preserve">
    <value>Select Product</value>
  </data>
  <data name="SelectPublicityTop" xml:space="preserve">
    <value>Select Publicity</value>
  </data>
  <data name="SelectSalesVendorTop" xml:space="preserve">
    <value>Select Sales Vendor</value>
  </data>
  <data name="VersionA" xml:space="preserve">
    <value>Version A</value>
  </data>
  <data name="VersionB" xml:space="preserve">
    <value>Version B</value>
  </data>
  <data name="AttendanceFoward" xml:space="preserve">
    <value>Attendance Foward</value>
  </data>
  <data name="AttendanceRegisterClient" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="ClientAlias" xml:space="preserve">
    <value>Alias</value>
  </data>
  <data name="ClientName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AttendanceFowardClient" xml:space="preserve">
    <value>Data for attendance client</value>
  </data>
  <data name="ClientAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ClientContactPersons" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="ClientEmail" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="ClientInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="ClientPhone" xml:space="preserve">
    <value>Phones</value>
  </data>
  <data name="ClientContactFoneAccessCode" xml:space="preserve">
    <value>Access Code</value>
  </data>
  <data name="ClientContactFoneAreaCode" xml:space="preserve">
    <value>Area Code</value>
  </data>
  <data name="ClientContactFoneNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ClientContactFonePrefix" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="ClientContactFoneType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ClientContactPerson" xml:space="preserve">
    <value>Contact Persons</value>
  </data>
  <data name="ClientContactPersonEmails" xml:space="preserve">
    <value>Contact Person Emails</value>
  </data>
  <data name="ClientContactPersonFones" xml:space="preserve">
    <value>Contact Person Phones</value>
  </data>
  <data name="ClientLocationCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="ClientAddresses" xml:space="preserve">
    <value>Addresses</value>
  </data>
  <data name="ClientAttendances" xml:space="preserve">
    <value>Attendances</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="ClientData" xml:space="preserve">
    <value>Client Data</value>
  </data>
  <data name="ClientEntity" xml:space="preserve">
    <value>Entity</value>
  </data>
  <data name="ClientPerson" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="ClientType" xml:space="preserve">
    <value>Client Type</value>
  </data>
  <data name="ClientContactPhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="CountrySelectTop" xml:space="preserve">
    <value>Select Country</value>
  </data>
  <data name="FoneTypeSelectTop" xml:space="preserve">
    <value>Select Phone Type</value>
  </data>
  <data name="ClientContacEmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="ClientContactEmailTop" xml:space="preserve">
    <value>Email Register</value>
  </data>
  <data name="ClientContactFoneTop" xml:space="preserve">
    <value>Phone Register</value>
  </data>
  <data name="ClientContactPersonDepartment" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="ClientContactPersonName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ClientContactPersonTop" xml:space="preserve">
    <value>Contact Person Register</value>
  </data>
  <data name="AttendanceHistory" xml:space="preserve">
    <value>Attendance History</value>
  </data>
  <data name="AttendanceHistoryComments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="ClientLocationComplement" xml:space="preserve">
    <value>Complement</value>
  </data>
  <data name="ClientLocationNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ClientAttendanceAddress" xml:space="preserve">
    <value>Attendance Address</value>
  </data>
  <data name="AttendanceHistoryType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Emails" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="Phones" xml:space="preserve">
    <value>Phones</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginViewName" xml:space="preserve">
    <value>Login Name</value>
  </data>
  <data name="LoginViewPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginViewSubmitButton" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginViewTitle" xml:space="preserve">
    <value>Access Control</value>
  </data>
</root>